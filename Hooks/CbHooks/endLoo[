local Lighting = game:GetService("Lighting")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

function hasProperty(ins,pro)
    return pcall(function() _=ins[pro] end)
end

function characterrotate(pos)
    pcall(function()
        if game.Players.LocalPlayer.Character then
            game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
            local gyro = Instance.new('BodyGyro')
            gyro.D = 0
            gyro.P = 1000000
            gyro.MaxTorque = Vector3.new(0, 1000000, 0)
            gyro.Parent = game.Players.LocalPlayer.Character.UpperTorso
            gyro.CFrame = CFrame.new(gyro.Parent.Position, pos)
            wait()
            gyro:Destroy()
        end
    end)
end

while task.wait() do

    if Toggles.antiAimTgl.Value == true then
        if Options.yawValue.Value == 'Back' then
            characterrotate((workspace.CurrentCamera.CFrame * CFrame.new(-4, 0, 0)).p)
        elseif Options.yawValue.Value == 'Spin' then
            if game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character:WaitForChild("Humanoid").AutoRotate = false
                local spin = Instance.new('BodyAngularVelocity', game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'))
                spin.AngularVelocity = Vector3.new(0, Options.spinValue.Value * 100, 0)
                spin.MaxTorque = Vector3.new(0, 230000, 0)
                wait()
                spin:Destroy()
            end
        elseif Options.yawValue.Value == 'Jitter' then
            if game.Players.LocalPlayer.Character then
                game.Players.LocalPlayer.Character:WaitForChild("Humanoid").AutoRotate = false
                local spin = Instance.new('BodyAngularVelocity', game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart'))
                spin.AngularVelocity = Vector3.new(0, math.random(-60000, 55000), 0)
                spin.MaxTorque = Vector3.new(0, 350000, 0)
                wait()
                spin:Destroy()
            end
        end
    end

    if Toggles.colorCorrectionEffect.Value == true then
        for i,v in pairs(Lighting:GetChildren()) do
            if v:IsA('ColorCorrectionEffect') then
                v.TintColor = Options.colorCorrectionColor.Value
            end
        end
    end

    if Toggles.bloomToggle.Value == true then
        for i,v in pairs(Lighting:GetChildren()) do
            if v:IsA('BloomEffect0') then
                v:Destroy()
            end
        end
        local effect = Instance.new('BloomEffect')
        effect.Parent = Lighting
        effect.Name = 'rgkbloom'

        Lighting['rgkbloom'].Intensity = Options.bloomIntensity.Value
        Lighting['rgkbloom'].Size = Options.bloomSize.Value
        Lighting['rgkbloom'].Threshold = Options.bloomThreshold.Value
        if Lighting:FindFirstChild('rgkbloom') then
            spawn(function()
                repeat
                    Lighting['rgkbloom'].Intensity = Options.bloomIntensity.Value
                    Lighting['rgkbloom'].Size = Options.bloomSize.Value
                    Lighting['rgkbloom'].Threshold = Options.bloomThreshold.Value
                    task.wait()
                until Toggles.bloomToggle.Value == false
            end)
        end
    elseif Toggles.bloomToggle.Value == false then
        for i,v in pairs(Lighting:GetChildren()) do
            if v.Name == 'rgkbloom' then
                v:Destroy()
            end
        end
    end



    if Toggles.thirdpersonTGL.Value and Options.thirdpersonkey:GetState() then
        UserInputService.MouseBehavior = Enum.MouseBehavior.LockCenter  
        LocalPlayer.CameraMode = 'Classic'
        game.Players.LocalPlayer.CameraMaxZoomDistance = Options.thirdPersonDistance.Value
        game.Players.LocalPlayer.CameraMinZoomDistance = Options.thirdPersonDistance.Value
        for i,v in pairs(game:GetService("Workspace").Camera.Arms:GetDescendants()) do
            if v:IsA("Part") or v:IsA("MeshPart") then
                v.Transparency = 1
            end
        end
    else
        LocalPlayer.CameraMode = 'LockFirstPerson'
        game.Players.LocalPlayer.CameraMaxZoomDistance = 0
        game.Players.LocalPlayer.CameraMinZoomDistance = 0
        for i,v in pairs(game:GetService("Workspace").Camera.Arms:GetDescendants()) do
            if v:IsA("Part") or v:IsA("MeshPart") then
                v.Transparency = 0
            end
        end
    end

    if Toggles.weaponChamsTgl.Value then
        if not game:GetService("Workspace").Camera:FindFirstChild("Arms") then
            wait()
        else
            for i,v in pairs(game:GetService("Workspace").Camera.Arms:GetDescendants()) do
                if v:IsA("MeshPart") then
                    v.Material = Enum.Material[Options.weaponChamsMaterial.Value]
                    v.Color = Options.weaponColor.Value
                end
            end
        end
    end

    if Toggles.armsChamsTgl.Value then
        if not game:GetService("Workspace").Camera:FindFirstChild("Arms") then
            wait()
        end
        if game:GetService("Workspace").Camera:FindFirstChild("Arms") then
            local arms = workspace.Camera.Arms
            for i,v in next, arms:GetChildren() do
                if v:IsA"Model" then
                    for _i,_v in next, v:GetDescendants() do
                        if Toggles.removeSleeveTgl.Value then
                            _v:Destroy()
                        end
                        if Toggles.armsChamsTgl.Value then
                            if hasProperty(_v,"CastShadow") then _v.CastShadow = false end
                            if _v:IsA"SpecialMesh" then
                                _v.VertexColor = Vector3.new(Options.armsColor.Value)
                            end
                            if _v:IsA"Part" then
                                _v.Material = Options.armsChamsMaterial.Value
                                _v.Transparency = 0.5
                                v.Color = Options.armsColor.Value
                                if _v.Transparency == 1 then continue end
                            end
                        end
                    end
                end
            end
        end
    end

    if Toggles.selfChamsTgl.Value then
        for i,v in pairs(LocalPlayer.Character:GetChildren()) do
            if v.Parent ~= nil then
                if v:IsA('BasePart') and v.Transparency ~= 1 then
                    v.Material = Enum.Material.ForceField
                    v.Color = Options.selfchamsColor.Value
                end
            end
        end
    end
end
